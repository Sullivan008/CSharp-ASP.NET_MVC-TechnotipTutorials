<!--Modell definiálása-->

@{
    ViewBag.Title = "Index";
}

<!--Egy sorban 4 képet jelenítünk meg egymás mellett, melyek reszponzívan jelennek meg.
    Egy sorban a col-md-x összege nem haladhatja meg a 12-őt. Összesen 12 kell hogy legyen
    az összege, ennek megfelelően fogja feldarabolni a képernyőt-->
<div class="panel panel-body">
    <div class="col-md-3">
        <img class="img-responsive" src="~/Content/Images/index.jpg" />
    </div>
    <div class="col-md-3">
        <img class="img-responsive" src="~/Content/Images/index.jpg" />
    </div>
    <div class="col-md-3">
        <img class="img-responsive" src="~/Content/Images/index.jpg" />
    </div>
    <div class="col-md-3">
        <img class="img-responsive" src="~/Content/Images/index.jpg" />
    </div>
</div>

<div class="panel panel-body">
    <!--Oldalsó menüsáv elkészítése.-->
    <div class="col-md-3">
        @{ Html.RenderAction("SideMenu", "Example");}
    </div>
    <!--Tartalom elkészítése-->
    <div class="col-md-9">
        <div class="col-md-5">
            <!--Lista csoport elkészítése...-->
            <ul class="list-grop" id="ItemList">

                <!--List fejléce, azaz címének elkészítése-->
                <li class="list-group-item-heading list-group-item active">
                    <h4 class="list-group-item-text">Az elérhető elemek a boltomban</h4>
                </li>

                <!--Lista tartalmának feltöltése, azaz a ViewBag-ben található Lista kiíratása-->
                @foreach (var item in ViewBag.ShopItemList)
                {
                    <li class="list-group-item">
                        <!--CheckBox-ok elkészítése.
                            Első sor maga a CheckBox mező definiálása (aazaz True/False),
                            Második sor, a hozzá tartozó név elkészítése-->
                        <div class="checkbox">
                            <input type="checkbox" id="Check_@item.ID" checked="@item.IsAvailable" />
                            <label for="Check_@item.ID">@item.Name</label>
                        </div>
                    </li>
                }

                <!--Elemek frissítése gomb elkészítése-->
                <li class="list-group-item">
                    <a class="btn btn-success btn-block" onclick="UpdateList()">
                        Elemek frissítése
                        <i class="glyphicon glyphicon-refresh"></i>
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>

<script>
    var UpdateList = function() {

        var checkedItemsArray = [];
        var commaSeparatedIDs = "";

        /// Az ItemList objektumból lekérdezzük azokat az li TAG-el rendelkező
        /// elemeket, amelyeknek az InputType-ja CheckBox. Tehát összegyűjtjük
        /// a CheckBox elemeket. Függvény tartalma(CheckBox IndexID, CheckBox ID)
        $("#ItemList li input[type=checkbox]").each(function (index, val) {
            /// Kiolvassuk az aktuális CheckBox ID attribútumának az értékét (Check_x)
            var checkID = $(val).attr("ID");

            /// Feldaraboljuk az _ karakternél a kapott értéket. Így egy két elemű tömböt kapunk
            /// arr[0] = Check, arr[1] = x
            var arr = checkID.split('_');

            /// Kiolvassuk a korábban feldarabolt ID tömb 1 indexű elemét, azaz konkrétan
            /// csak az ID-t
            var currentCheckBoxID = arr[1];

            /// Vizsgálat, hogy az x ID-jú CheckBox mező, be van e pipálva, vagy sem
            /// Az x ID-jú CheckBox mező checked attribútumának vizsgálata
            var isChecked = $("#" + checkID).is(":checked", true);

            /// Ha be van pipálva, akkor annak az ID-ját elraktározzuk egy tömbben. Azaz
            /// összegyűjtjük a bepipált elemeket
            if (isChecked)
            {
                checkedItemsArray.push(currentCheckBoxID);
            }
        });

        /// Csak akkor hajtunk végre Lista mentést, ha van legalább egy olyan elem
        /// ami be van pipálva
        if (checkedItemsArray.length != 0)
        {
            /// AJAX - Asyncron JavaScript And XML
            $.ajax({
                type    : "POST",                                               /// Kérés típusa
                url     : "/Home/RefreshItemsList",                             /// Hol érhető el (Controller/MethodName)
                data    : { CheckedItemList: checkedItemsArray.toString() },    /// A mentendő lista ID-s
                success : function (response) {                                 /// Ha sikeresen végrehajtódott a kérés
                    /// Az eredményként kapott PartialView-ot betöltjük a PopupWindow törzsébe
                    $("#ItemList").html(response);

                    alert("Az adatok frissítése sikeres!");
                }
            })
        }
    }
</script>